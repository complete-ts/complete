name: CI

on: [push, pull_request]

jobs:
  get-build-packages:
    runs-on: ubuntu-latest
    outputs:
      package-names: ${{ steps.set-matrix.outputs.package-names }}
    steps:
      - uses: actions/checkout@v5
      - id: set-matrix
        uses: complete-ts/get-package-names@main
        with:
          script-name: build

  build:
    needs: get-build-packages
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package-name: ${{ fromJson(needs.get-build-packages.outputs.package-names) }}
      fail-fast: false
    steps:
      - uses: actions/checkout@v5
      - uses: ./.github/workflows/setup
      - working-directory: ./packages/${{ matrix.package-name }}
        run: npm run build
      - name: Store the docs build directory
        if: ${{ matrix.package-name == 'docs' }}
        uses: actions/upload-artifact@v4
        with:
          name: docs-build
          path: ./packages/docs/build

  get-lint-packages:
    runs-on: ubuntu-latest
    outputs:
      package-names: ${{ steps.set-matrix.outputs.package-names }}
    steps:
      - uses: actions/checkout@v5
      - id: set-matrix
        uses: complete-ts/get-package-names@main
        with:
          script-name: lint

  lint:
    needs: get-lint-packages
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package-name: ${{ fromJson(needs.get-lint-packages.outputs.package-names) }}
      fail-fast: false
    steps:
      - uses: actions/checkout@v5
      - uses: ./.github/workflows/setup
      - working-directory: ./packages/${{ matrix.package-name }}
        run: npm run lint

  get-test-packages:
    runs-on: ubuntu-latest
    outputs:
      package-names: ${{ steps.set-matrix.outputs.package-names }}
    steps:
      - uses: actions/checkout@v5
      - id: set-matrix
        uses: complete-ts/get-package-names@main
        with:
          script-name: test

  test:
    needs: get-test-packages
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package-name: ${{ fromJson(needs.get-test-packages.outputs.package-names) }}
      fail-fast: false
    steps:
      - uses: actions/checkout@v5
      - uses: ./.github/workflows/setup
      - working-directory: ./packages/${{ matrix.package-name }}
        # We specify custom Node.js options in order to increase the memory size, since GitHub
        # Actions can fail with the following error when doing the `eslint-plugin-complete` tests:
        # FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
        run: NODE_OPTIONS='--max-old-space-size=8192' npm run test

  monorepo-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: ./.github/workflows/setup
      - run: npm run lint

  docs-deploy:
    needs: [build, lint, test, monorepo-lint]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    steps:
      - uses: actions/checkout@v5
      - uses: ./.github/workflows/setup

      - name: Check if the "DOCS_SSH_PRIVATE_KEY" GitHub secret is set
        env:
          SECRET_CHECK: ${{ secrets.DOCS_SSH_PRIVATE_KEY }}
        if: ${{ env.SECRET_CHECK == '' }}
        run: |
          echo "Error: The GitHub secret of \"DOCS_SSH_PRIVATE_KEY\" is not set."
          exit 1

      - name: Check if the "ALGOLIA_CRAWLER_USER_ID" GitHub secret is set
        env:
          SECRET_CHECK: ${{ secrets.ALGOLIA_CRAWLER_USER_ID }}
        if: ${{ env.SECRET_CHECK == '' }}
        run: |
          echo "Error: The GitHub secret of \"ALGOLIA_CRAWLER_USER_ID\" is not set."
          exit 1

      - name: Check if the "ALGOLIA_CRAWLER_API_KEY" GitHub secret is set
        env:
          SECRET_CHECK: ${{ secrets.ALGOLIA_CRAWLER_API_KEY }}
        if: ${{ env.SECRET_CHECK == '' }}
        run: |
          echo "Error: The GitHub secret of \"ALGOLIA_CRAWLER_API_KEY\" is not set."
          exit 1

      - name: Check if the "ALGOLIA_CRAWLER_ID" GitHub secret is set
        env:
          SECRET_CHECK: ${{ secrets.ALGOLIA_CRAWLER_ID }}
        if: ${{ env.SECRET_CHECK == '' }}
        run: |
          echo "Error: The GitHub secret of \"ALGOLIA_CRAWLER_ID\" is not set."
          exit 1

      - name: Retrieve the docs build directory
        uses: actions/download-artifact@v4
        with:
          name: docs-build
          path: ./packages/docs/build

      - name: Checkout the docs repository
        uses: actions/checkout@v5
        with:
          ssh-key: ${{ secrets.DOCS_SSH_PRIVATE_KEY }}
          repository: complete-ts/complete-ts.github.io
          ref: gh-pages
          # The current working directory is:
          # /home/runner/work/complete/complete
          # Thus, the following path is equivalent to:
          # /home/runner/work/complete/complete/complete-ts.github.io
          # (It is not possible to clone the repo in the parent directory for security reasons.)
          path: complete-ts.github.io

      - name: Deploy the documentation website
        id: deploy-website
        run: npx tsx ./packages/docs/scripts/deploy.mts ${{ secrets.GITHUB_TOKEN }}

      - name: Run Algolia Crawler
        env:
          # From: https://crawler.algolia.com/admin/user/settings/
          ALGOLIA_CRAWLER_USER_ID: ${{ secrets.ALGOLIA_CRAWLER_USER_ID }}
          ALGOLIA_CRAWLER_API_KEY: ${{ secrets.ALGOLIA_CRAWLER_API_KEY }}

          # From: https://crawler.algolia.com/admin/crawlers/[crawler-id]/settings
          ALGOLIA_CRAWLER_ID: ${{ secrets.ALGOLIA_CRAWLER_ID }}
        run: |
          curl -X POST -H "Content-Type: application/json" \
            --user $ALGOLIA_CRAWLER_USER_ID:$ALGOLIA_CRAWLER_API_KEY \
            "https://crawler.algolia.com/api/1/crawlers/$ALGOLIA_CRAWLER_ID/reindex"

  discord:
    name: Discord Failure Notification
    needs: [build, lint, test, monorepo-lint, docs-deploy]
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          status: failure
          title: ""
